// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpCollectorsAdminApi.Data;

#nullable disable

namespace SpCollectorsAdminApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506171442_AddNewModel4ToPropertyToPlanDetail")]
    partial class AddNewModel4ToPropertyToPlanDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("SpCollectorsAdminApi.CollectorEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CollectorCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollectorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CollectorEntry");
                });

            modelBuilder.Entity("SpCollectorsAdminApi.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Aging")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("CBI")
                        .HasColumnType("TEXT");

                    b.Property<double?>("CollAdvance")
                        .HasColumnType("REAL");

                    b.Property<double?>("CollDue")
                        .HasColumnType("REAL");

                    b.Property<string>("CollectorCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("CollectorEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CollectorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ins")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstNo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ORDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ORNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plan")
                        .HasColumnType("TEXT");

                    b.Property<string>("Planholder")
                        .HasColumnType("TEXT");

                    b.Property<double?>("QuotaComm")
                        .HasColumnType("REAL");

                    b.Property<double?>("QuotaNComm")
                        .HasColumnType("REAL");

                    b.Property<double?>("Tax")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CollectorEntryId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("SpCollectorsAdminApi.PlanDetail", b =>
                {
                    b.HasOne("SpCollectorsAdminApi.CollectorEntry", "CollectorEntry")
                        .WithMany("Entries")
                        .HasForeignKey("CollectorEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollectorEntry");
                });

            modelBuilder.Entity("SpCollectorsAdminApi.CollectorEntry", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
